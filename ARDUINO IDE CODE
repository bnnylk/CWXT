#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>
#include <TFT_eSPI.h>
#include <SPI.h>

const char* ssid = "bnnylk";
const char* password = "lilygo22";
const char* apiKey = "cc1618bed161cc806cfb53c57dbb68eb";
const char* city = "Syracuse,US";

TFT_eSPI tft = TFT_eSPI();

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);

  tft.init();
  tft.setRotation(1);
  pinMode(14, OUTPUT);
  digitalWrite(14, HIGH); // backlight ON

  tft.fillScreen(TFT_BLACK);

  unsigned long start = millis();
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
    if (millis() - start > 10000) {
      Serial.println(" Wi-Fi failed.");
      return;
    }
  }
  Serial.println(" Wi-Fi connected.");
  fetchWeather();
}

void loop() {
  delay(900000); // update every 15 minutes
  fetchWeather();
}

void fetchWeather() {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    String url = "http://api.openweathermap.org/data/2.5/weather?q=" + String(city) + "&appid=" + String(apiKey) + "&units=metric";
    http.begin(url);
    int httpCode = http.GET();

    if (httpCode == 200) {
      String payload = http.getString();
      StaticJsonDocument<2048> doc;
      if (deserializeJson(doc, payload) == DeserializationError::Ok) {
        int id = doc["weather"][0]["id"];

        Serial.print("Weather ID: ");
        Serial.println(id);

        uint16_t color = getColorForWeather(id);
        tft.fillScreen(color);
      }
    }

    http.end();
  }
}

uint16_t getColorForWeather(int id) {
  if (id >= 200 && id <= 232) return tft.color565(255, 0, 0);        // Thunderstorm - Red
  if (id >= 300 && id <= 321) return tft.color565(175, 207, 234);    // Drizzle - Light Bluish Grey
  if (id >= 500 && id <= 531) return tft.color565(0, 0, 255);        // Rain - Blue
  if (id >= 600 && id <= 622) return tft.color565(255, 255, 255);    // Snow - White
  if (id >= 700 && id <= 781) return tft.color565(245, 245, 220);    // Atmosphere - Beige
  if (id == 800)              return tft.color565(255, 220, 0);      // Clear - Yellow
  if (id == 801)              return tft.color565(111, 150, 189);    // Few clouds - Pale slate blue
  if (id == 802)              return tft.color565(160, 160, 175);    // Scattered clouds - Light grey-blue
  if (id == 803)              return tft.color565(120, 120, 130);    // Broken clouds - Medium grey
  if (id == 804)              return tft.color565(85, 85, 95);       // Overcast - Deep grey
  return TFT_BLACK;
}

